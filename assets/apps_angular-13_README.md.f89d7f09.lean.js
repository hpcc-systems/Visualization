import{_ as a,c as s,a as t,o as e}from"./app.ab56574e.js";var o="/Visualization/assets/readme.7fdd79aa.gif";const h='{"title":"Angular13","description":"","frontmatter":{},"headers":[{"level":2,"title":"Compatibility Note","slug":"compatibility-note"},{"level":2,"title":"Development server","slug":"development-server"},{"level":2,"title":"Code scaffolding","slug":"code-scaffolding"},{"level":2,"title":"Build","slug":"build"},{"level":2,"title":"Running unit tests","slug":"running-unit-tests"},{"level":2,"title":"Running end-to-end tests","slug":"running-end-to-end-tests"},{"level":2,"title":"Further help","slug":"further-help"},{"level":2,"title":"Workaround for @hpcc-js/dgrid","slug":"workaround-for-hpcc-js-dgrid"}],"relativePath":"apps/angular-13/README.md"}',p={};function c(l,n,r,i,u,d){return e(),s("div",null,n[0]||(n[0]=[t('<h1 id="angular13" tabindex="-1">Angular13 <a class="header-anchor" href="#angular13" aria-hidden="true">#</a></h1><p>This project was generated with <a href="https://github.com/angular/angular-cli" target="_blank" rel="noopener noreferrer">Angular CLI</a> version 13.1.3.</p><p><img src="'+o+`" alt=""></p><h2 id="compatibility-note" tabindex="-1">Compatibility Note <a class="header-anchor" href="#compatibility-note" aria-hidden="true">#</a></h2><p>With the exception of the following, all visualizations should &quot;just work&quot;.</p><p>Exceptions (see below for workaround):</p><ul><li><code>@hpcc-js/dgrid</code> - replace with <code>@hpcc-js/dgrid2</code></li><li><code>@hpcc-js/eclwatch</code> - still has dependency on <code>@hpcc-js/dgrid</code> (specifically for nested child datasets)</li><li><code>@hpcc-js/marshaller</code> - still has dependency on <code>@hpcc-js/dgrid</code> (primarily for Dashy and nested child datasets)</li></ul><h2 id="development-server" tabindex="-1">Development server <a class="header-anchor" href="#development-server" aria-hidden="true">#</a></h2><p>Run <code>ng serve</code> for a dev server. Navigate to <code>http://localhost:4200/</code>. The app will automatically reload if you change any of the source files.</p><h2 id="code-scaffolding" tabindex="-1">Code scaffolding <a class="header-anchor" href="#code-scaffolding" aria-hidden="true">#</a></h2><p>Run <code>ng generate component component-name</code> to generate a new component. You can also use <code>ng generate directive|pipe|service|class|guard|interface|enum|module</code>.</p><h2 id="build" tabindex="-1">Build <a class="header-anchor" href="#build" aria-hidden="true">#</a></h2><p>Run <code>ng build</code> to build the project. The build artifacts will be stored in the <code>dist/</code> directory.</p><h2 id="running-unit-tests" tabindex="-1">Running unit tests <a class="header-anchor" href="#running-unit-tests" aria-hidden="true">#</a></h2><p>Run <code>ng test</code> to execute the unit tests via <a href="https://karma-runner.github.io" target="_blank" rel="noopener noreferrer">Karma</a>.</p><h2 id="running-end-to-end-tests" tabindex="-1">Running end-to-end tests <a class="header-anchor" href="#running-end-to-end-tests" aria-hidden="true">#</a></h2><p>Run <code>ng e2e</code> to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.</p><h2 id="further-help" tabindex="-1">Further help <a class="header-anchor" href="#further-help" aria-hidden="true">#</a></h2><p>To get more help on the Angular CLI use <code>ng help</code> or go check out the <a href="https://angular.io/cli" target="_blank" rel="noopener noreferrer">Angular CLI Overview and Command Reference</a> page.</p><h2 id="workaround-for-hpcc-js-dgrid" tabindex="-1">Workaround for <code>@hpcc-js/dgrid</code> <a class="header-anchor" href="#workaround-for-hpcc-js-dgrid" aria-hidden="true">#</a></h2><p>Unfortunately &quot;@hpcc-js/dgrid&quot; package is incompatible with the &quot;use strict&quot; JavaScript rules and now that Angular 13 has upgraded to use &quot;module&quot; based packages (which implicitly enable &quot;use strict&quot;) the <code>@hpcc-js/dgrid</code> can not be used directly within Angular 13.</p><p>The workaround is to load dgrid (and its dependencies) via traditional means:</p><ol><li>Include the scripts to the <code>&lt;head&gt;</code> of the <code>index.html</code> file (only dgrid and its dependencies are needed):</li></ol><div class="language-html"><pre><code>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>stylesheet<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://cdn.jsdelivr.net/npm/@hpcc-js/common@2.66.1/font-awesome/css/font-awesome.min.css<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://cdn.jsdelivr.net/npm/@hpcc-js/util@2.46.1/dist/index.min.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://cdn.jsdelivr.net/npm/@hpcc-js/common@2.66.1/dist/index.min.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://cdn.jsdelivr.net/npm/@hpcc-js/dgrid@2.30.2/dist/index.min.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">var</span> hpcc_util <span class="token operator">=</span> window<span class="token punctuation">[</span><span class="token string">&quot;@hpcc-js/util&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> hpcc_common <span class="token operator">=</span> window<span class="token punctuation">[</span><span class="token string">&quot;@hpcc-js/common&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> hpcc_dgrid <span class="token operator">=</span> window<span class="token punctuation">[</span><span class="token string">&quot;@hpcc-js/dgrid&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><ol start="2"><li>Tell webpack to treat those three packages as &quot;external&quot;. This is bit of pain in Angular as their mantra is to not expose any of the webpack settings or allow manual configuration. However there is a custom Angular builder which can assist with this &quot;@angular-builders/custom-webpack&quot;:</li></ol><div class="language-sh"><pre><code><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-D</span> @angular-builders/custom-webpack
</code></pre></div><p><strong>Note</strong>: This builder re-uses the default <code>@angular-devkit/build-angular</code> builder, but allows for extending and tweaking the default webpack configuration.</p><ol start="3"><li><p>Update the angular.json file to use this custom builder instead of the default one. Open your angular.json and replace all instances of <code>@angular-devkit/build-angular</code> with <code>@angular-builders/custom-webpack</code>.</p></li><li><p>Add the following <code>customWebpackConfig</code> to your angular.json:</p></li></ol><div class="language-json"><pre><code><span class="token property">&quot;architect&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
   ...
  <span class="token property">&quot;build&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;builder&quot;</span><span class="token operator">:</span> <span class="token string">&quot;@angular-builders/custom-webpack:browser&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;options&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token comment">//  Add the following customWebPackConfig to your angular.json file.</span>
            <span class="token property">&quot;customWebpackConfig&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
              <span class="token property">&quot;path&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./webpack-append.config.js&quot;</span><span class="token punctuation">,</span>
              <span class="token property">&quot;mergeRules&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token property">&quot;externals&quot;</span><span class="token operator">:</span> <span class="token string">&quot;append&quot;</span>
              <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            ...
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
  ...
<span class="token punctuation">}</span>
</code></pre></div><ol start="5"><li>Finally create the <code>webpack-append.config.js</code> file in the root folder:</li></ol><div class="language-js"><pre><code><span class="token comment">/* eslint-disable no-undef */</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">externals</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token string-property property">&quot;@hpcc-js/util&quot;</span><span class="token operator">:</span> <span class="token string">&quot;hpcc_util&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;@hpcc-js/common&quot;</span><span class="token operator">:</span> <span class="token string">&quot;hpcc_common&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;@hpcc-js/dgrid&quot;</span><span class="token operator">:</span> <span class="token string">&quot;hpcc_dgrid&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div>`,31)]))}var g=a(p,[["render",c]]);export{h as __pageData,g as default};
