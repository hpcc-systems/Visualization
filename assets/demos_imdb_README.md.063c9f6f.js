import{_ as t,c as i,a as r,o as a}from"./app.ab56574e.js";var o="/Visualization/assets/readme.8ff5467f.gif";const u='{"title":"IMDB Graph Tutorial","description":"","frontmatter":{},"headers":[{"level":2,"title":"Project Layout","slug":"project-layout"},{"level":2,"title":"IMDB Graph Widget","slug":"imdb-graph-widget"},{"level":2,"title":"IMDB Vertex (node) Widget","slug":"imdb-vertex-node-widget"},{"level":2,"title":"IMDB Edge (link) Widget","slug":"imdb-edge-link-widget"},{"level":2,"title":"IMDB Table Widget","slug":"imdb-table-widget"},{"level":2,"title":"Main App","slug":"main-app"}],"relativePath":"demos/imdb/README.md"}',n={};function l(s,e,d,c,g,h){return a(),i("div",null,e[0]||(e[0]=[r('<h1 id="imdb-graph-tutorial" tabindex="-1">IMDB Graph Tutorial <a class="header-anchor" href="#imdb-graph-tutorial" aria-hidden="true">#</a></h1><p><em>A working example of an interactive graph visualization - <a href="https://raw.githack.com/hpcc-systems/Visualization/trunk/demos/imdb/index.html" target="_blank" rel="noopener noreferrer">live demo</a></em></p><p><img src="'+o+'" alt=""></p><h2 id="project-layout" tabindex="-1">Project Layout <a class="header-anchor" href="#project-layout" aria-hidden="true">#</a></h2><ul><li><strong>data</strong>: Sample IMDB dataset</li><li><strong>doc</strong>: <a href="https://raw.githack.com/hpcc-systems/Visualization/trunk/demos/imdb/doc/index.html" target="_blank" rel="noopener noreferrer">API Documentation</a> (experimental)</li><li><strong>src</strong>: Source Code (TypeScript) <ul><li><strong>index.ts</strong>: Main page (SPA) - could be bootstrap / React / Angular etc.</li><li><strong>IMDBGraph.ts</strong>: IMDB Specific Graph Widget</li><li><strong>IMDBVertex.ts</strong>: IMDB Specific Vertex (node) Widgets</li><li><strong>IMDBEdge.ts</strong>: IMDB Specific Eege (link) Widget</li><li><strong>IMDBTable.ts</strong>: IMDB Specific Table Widgets</li><li><strong>IMDBServer.ts</strong>: &quot;Fake&quot; IMDB Web Service</li></ul></li><li><strong>src-umd</strong>: Source Code (JavaScript) generated from src folder (only included so demo can run on <a href="http://githack.com" target="_blank" rel="noopener noreferrer">githack.com</a>).</li><li><strong>style</strong>: CSS Style sheet(s)</li><li><strong>index.html</strong>: Main html page - note: This file is a bit &quot;special&quot; as its designed to work with local sources (unbundled development mode) and also while hosted on GitHub with the official releases (using unpkg). For better examples on how to include the @hpcc-js packages please see the <a href="https://github.com/hpcc-systems/Visualization/wiki/Quick-Start" target="_blank" rel="noopener noreferrer">Quick-Start</a> wiki.</li><li><strong>package.json</strong>: npm dependencies</li><li><strong><a href="http://README.md" target="_blank" rel="noopener noreferrer">README.md</a></strong>: This file</li><li><strong>tsconfig.json</strong>: TypeScript compiler options</li></ul><p><strong>Note</strong>: The goal of this demo is to show a basic interactive Graph - the web application &quot;scaffolding&quot; is sub optimal as it needs to support the following two scenarios:</p><ul><li>Local development mode (works with local unbundled sources).</li><li>GitHub hosted demo (dynamically load bundled modules from <a href="http://unpkg.com" target="_blank" rel="noopener noreferrer">unpkg.com</a>).</li></ul><h2 id="imdb-graph-widget" tabindex="-1">IMDB Graph Widget <a class="header-anchor" href="#imdb-graph-widget" aria-hidden="true">#</a></h2><p><a href="src/IMDBGraph.ts">src/IMDBGraph.ts</a> contains the main &quot;IMDB&quot; Graph widget</p><h2 id="imdb-vertex-node-widget" tabindex="-1">IMDB Vertex (node) Widget <a class="header-anchor" href="#imdb-vertex-node-widget" aria-hidden="true">#</a></h2><p><a href="src/IMDBVertex.ts">src/IMDBVertex.ts</a> contains the following &quot;IMDB&quot; Vertex widgets</p><ul><li><strong>IMDBVertex</strong>: Base class for MovieVertex and PersonVertex (nodes)</li><li><strong>MovieVertex</strong>: The Movie specific vertex (node)</li><li><strong>PersonVertex</strong>: The Person specific vertex (node)</li></ul><h2 id="imdb-edge-link-widget" tabindex="-1">IMDB Edge (link) Widget <a class="header-anchor" href="#imdb-edge-link-widget" aria-hidden="true">#</a></h2><p><a href="src/IMDBEdge.ts">src/IMDBEdge.ts</a> contains the &quot;IMDB&quot; Edge (link) widget</p><h2 id="imdb-table-widget" tabindex="-1">IMDB Table Widget <a class="header-anchor" href="#imdb-table-widget" aria-hidden="true">#</a></h2><p><a href="src/IMDBTable.ts">src/IMDBTable.ts</a> contains the &quot;IMDB&quot; tables:</p><ul><li><strong>MovieTable</strong>: Table for displaying Movie information</li><li><strong>PersonTable</strong>: Table for displaying Person information</li></ul><h2 id="main-app" tabindex="-1">Main App <a class="header-anchor" href="#main-app" aria-hidden="true">#</a></h2><p><a href="src/index.ts">src/index.ts</a> contains the main web page (typically this would be a Bootstrap, React, Angular, ... app). Its notable content is:</p><ul><li>Instantiates the main Graph and listens for vertex double click events</li><li>Instantiates the Movie Table and listens for single click events</li><li>Instantiates the Person Table and listens for single click events</li></ul><p>Event handlers:</p><ul><li>Movie / Person Vertex Double Click: Query the server for new links and update the graph / tables</li><li>Movie / Person Table Click: Center the graph on the clicked row.</li></ul>',22)]))}var m=t(n,[["render",l]]);export{u as __pageData,m as default};
