import{_ as a,c as s,a as t,o as p}from"./app.ab56574e.js";const d='{"title":"IMPORT, REQUIRE and Global Namespaces","description":"","frontmatter":{},"headers":[{"level":2,"title":"<SCRIPT> and Global Namespaces","slug":"script-and-global-namespaces"},{"level":2,"title":"ES6 IMPORT","slug":"es6-import"},{"level":2,"title":"AMD REQUIRE","slug":"amd-require"},{"level":2,"title":"CommonJS REQUIRE","slug":"commonjs-require"}],"relativePath":"docs/Getting Started/importRequireGlobalVars.md"}',o={};function e(c,n,l,u,i,k){return p(),s("div",null,n[0]||(n[0]=[t(`<h1 id="import-require-and-global-namespaces" tabindex="-1">IMPORT, REQUIRE and Global Namespaces <a class="header-anchor" href="#import-require-and-global-namespaces" aria-hidden="true">#</a></h1><p>Depending on how the <code>@hpcc-js</code> packages have been included into your web app, there are 3 common paradigms for accessing the widgets within the packages. While the majority of the examples in this documentation use the <code>import</code> method, it is important to note that depending on your apps configuration any of the 3 common options are interchangeable.</p><h2 id="script-and-global-namespaces" tabindex="-1">&lt;SCRIPT&gt; and Global Namespaces <a class="header-anchor" href="#script-and-global-namespaces" aria-hidden="true">#</a></h2><p>Tends to be used on smaller or &quot;quick&quot; web page construction, the packages are typically loaded from a CDN server and are accessed via global namespace. Each <code>@hpcc-js</code> package will set up a global variable matching the package name. <strong>Note:</strong> Because the global variable includes &quot;/&quot; in its name, it will need to be accessed using <code>OBJ[&quot;prop&quot;]</code> syntax, this is deliberate as it reduces the chance that our global variable names will clash with other third party libraries.</p><div class="language-html"><pre><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>CDN + SCRIPT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>utf-8<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://unpkg.com/@hpcc-js/util<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://unpkg.com/@hpcc-js/common<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://unpkg.com/@hpcc-js/api<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://unpkg.com/@hpcc-js/chart<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
        <span class="token keyword">var</span> hpccChart <span class="token operator">=</span> window<span class="token punctuation">[</span><span class="token string">&quot;@hpcc-js/chart&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>placeholder<span class="token punctuation">&quot;</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">width</span><span class="token punctuation">:</span>640px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span>480px</span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
        <span class="token keyword">const</span> myPie <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">hpccChart<span class="token punctuation">.</span>Pie</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">target</span><span class="token punctuation">(</span><span class="token string">&quot;placeholder&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">columns</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;label&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;weight&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&quot;Hello&quot;</span><span class="token punctuation">,</span> <span class="token number">43</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&quot;World&quot;</span><span class="token punctuation">,</span> &quot;<span class="token number">43</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">;</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><h2 id="es6-import" tabindex="-1">ES6 IMPORT <a class="header-anchor" href="#es6-import" aria-hidden="true">#</a></h2><p>Typically used by folks who are either targeting modern browsers, or who use transpilers like Babel or TypeScript. Typically used in conjunction with bundlers WEbpack or RollupJS. <strong>Note:</strong> All the &quot;live&quot; samples in this documentation will use this notation.</p><div class="language-javascript"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Pie <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@hpcc-js/chart&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> myPie <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Pie</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">...</span>
myPie<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="amd-require" tabindex="-1">AMD REQUIRE <a class="header-anchor" href="#amd-require" aria-hidden="true">#</a></h2><p>While AMD loading is probably less popular than <code>import</code> + <code>WebPack</code> it can be very useful during the development phase of a WebApp.</p><div class="language-javascript"><pre><code><span class="token function">require</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;@hpcc-js/chart&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">hpccChart</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> Pie <span class="token operator">=</span> hpccChart<span class="token punctuation">.</span>Pie<span class="token punctuation">;</span>

    <span class="token keyword">const</span> myPie <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Pie</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token operator">...</span>
    myPie<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="commonjs-require" tabindex="-1">CommonJS REQUIRE <a class="header-anchor" href="#commonjs-require" aria-hidden="true">#</a></h2><p>This paradigm is not typically used by front end developers and has subtly different to AMD REQUIRE</p><div class="language-javascript"><pre><code><span class="token keyword">const</span> Pie <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;@hpcc-js/chart&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Pie<span class="token punctuation">;</span>

<span class="token keyword">const</span> myPie <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Pie</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">...</span>
myPie<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div>`,14)]))}var g=a(o,[["render",e]]);export{d as __pageData,g as default};
