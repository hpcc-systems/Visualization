import{_ as a,c as s,a as e,o as t}from"./app.ab56574e.js";var o="/Visualization/assets/summary-table.abcb62d1.png";const h='{"title":"@hpcc-js/observablehq-compiler","description":"","frontmatter":{},"headers":[{"level":2,"title":"Quick Start","slug":"quick-start"},{"level":2,"title":"Command line interface","slug":"command-line-interface"},{"level":3,"title":"Usage:","slug":"usage"},{"level":2,"title":"JS Interpreter","slug":"js-interpreter"}],"relativePath":"packages/observablehq-compiler/README.md"}',p={};function c(l,n,r,i,u,k){return t(),s("div",null,n[0]||(n[0]=[e(`<h1 id="hpcc-js-observablehq-compiler" tabindex="-1">@hpcc-js/observablehq-compiler <a class="header-anchor" href="#hpcc-js-observablehq-compiler" aria-hidden="true">#</a></h1><p>An unofficial compiler, interpreter and download tool for <a href="https://observablehq.com/" target="_blank" rel="noopener noreferrer">Observable HQ</a> notebooks.</p><ul><li><a href="#quick-start">Quick Start</a></li><li><a href="./src/compiler.html">Compiler</a></li><li><a href="./src/util.html">Utilities</a></li></ul><h2 id="quick-start" tabindex="-1">Quick Start <a class="header-anchor" href="#quick-start" aria-hidden="true">#</a></h2><p>This library contains a command line tool (<code>ojscc</code>) for downloading and compiling notebooks and an interpreter for rendering notebooks in the browser:</p><ul><li><a href="#command-line-interface">Command line interface</a></li><li><a href="#js-interpreter">JS Interpreter</a></li></ul><h2 id="command-line-interface" tabindex="-1">Command line interface <a class="header-anchor" href="#command-line-interface" aria-hidden="true">#</a></h2><p>To call <code>ojscc</code> without installing:</p><div class="language-sh"><pre><code>npx <span class="token parameter variable">-p</span> @hpcc-js/observablehq-compiler ojscc <span class="token punctuation">[</span>download <span class="token operator">|</span> compile<span class="token punctuation">]</span> <span class="token punctuation">..</span>.
</code></pre></div><p>To install <code>ojscc</code> as a global command:</p><div class="language-sh"><pre><code><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">--global</span> @hpcc-js/observablehq-compiler
</code></pre></div><p>Then it can be called by:</p><div class="language-sh"><pre><code>ojscc <span class="token punctuation">[</span>download <span class="token operator">|</span> compile<span class="token punctuation">]</span> <span class="token punctuation">..</span>.
</code></pre></div><h3 id="usage" tabindex="-1">Usage: <a class="header-anchor" href="#usage" aria-hidden="true">#</a></h3><p>General:</p><div class="language-sh"><pre><code>ojscc <span class="token punctuation">[</span>command<span class="token punctuation">]</span>

Commands:
  ojscc download  Download ObservableHQ Notebook
  ojscc compile   Compile ObservableHQ Notebook

Options:
      <span class="token parameter variable">--version</span>  Show version number                                             <span class="token punctuation">[</span>boolean<span class="token punctuation">]</span>
  -h, <span class="token parameter variable">--help</span>     Show <span class="token builtin class-name">help</span>                                                       <span class="token punctuation">[</span>boolean<span class="token punctuation">]</span>
</code></pre></div><p>Download:</p><div class="language-sh"><pre><code>ojscc download <span class="token punctuation">[</span>-o myfile.ojsnb<span class="token punctuation">]</span> https://observablehq.com/@user/notebook

Options:
      <span class="token parameter variable">--version</span>  Show version number                                             <span class="token punctuation">[</span>boolean<span class="token punctuation">]</span>
  -h, <span class="token parameter variable">--help</span>     Show <span class="token builtin class-name">help</span>                                                       <span class="token punctuation">[</span>boolean<span class="token punctuation">]</span>
  -o, <span class="token parameter variable">--output</span>   Optional output <span class="token function">file</span> path
</code></pre></div><p>Compile:</p><div class="language-sh"><pre><code>ojscc compile <span class="token punctuation">[</span>-o myfile.js<span class="token punctuation">]</span> myfile.ojsnb

Options:
      <span class="token parameter variable">--version</span>  Show version number                                             <span class="token punctuation">[</span>boolean<span class="token punctuation">]</span>
  -h, <span class="token parameter variable">--help</span>     Show <span class="token builtin class-name">help</span>                                                       <span class="token punctuation">[</span>boolean<span class="token punctuation">]</span>
  -o, <span class="token parameter variable">--output</span>   Optional output <span class="token function">file</span> path
</code></pre></div><h2 id="js-interpreter" tabindex="-1">JS Interpreter <a class="header-anchor" href="#js-interpreter" aria-hidden="true">#</a></h2><p>To install with npm :</p><div class="language-"><pre><code>npm install --save @hpcc-js/observablehq-compiler
</code></pre></div><p>The interpreter is 100% compatible with:</p><ul><li><a href="https://github.com/observablehq/runtime" target="_blank" rel="noopener noreferrer">ObservableHQ Runtime</a></li><li><a href="https://github.com/observablehq/inspector" target="_blank" rel="noopener noreferrer">ObservableHQ Inspector</a></li><li><a href="https://github.com/observablehq/library" target="_blank" rel="noopener noreferrer">ObservableHQ Library</a></li></ul><p>It also supports fetching notebooks directly from the ObservableHQ repository.</p><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Library<span class="token punctuation">,</span> Runtime<span class="token punctuation">,</span> Inspector <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@observablehq/runtime&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> download<span class="token punctuation">,</span> compile <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@hpcc-js/observablehq-compiler&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> placeholder <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;placeholder&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> ohqnb <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">download</span><span class="token punctuation">(</span><span class="token string">&quot;https://observablehq.com/@observablehq/summary-table&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> compiledNB <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">compile</span><span class="token punctuation">(</span>ohqnb<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> library <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Library</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> runtime <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Runtime</span><span class="token punctuation">(</span>library<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">compiledNB</span><span class="token punctuation">(</span>runtime<span class="token punctuation">,</span> <span class="token parameter">name</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> div <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    placeholder<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>div<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Inspector</span><span class="token punctuation">(</span>div<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>Which produces (screenshot):</p><hr><p><img src="`+o+'" alt=""></p><hr>',31)]))}var b=a(p,[["render",c]]);export{h as __pageData,b as default};
